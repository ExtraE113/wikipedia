//todo visualizer
//todo filter for noncomplient articles
//todo q to keep up to date with eventstream
//todo edit noncomplying articles

//todo wtf
    //  simple.wiktionary.org/wiki/revolt
    //  //simple.wiktionary.org/wiki/increase
    //  etc
    //  //quod.lib.umich.edu/j/jala/2629860.0029.205?view=text;rgn=main
    // www.wikidata.org/wiki/Q84067110
    // why the links?
    // why this?
    //note-Choosingdeath-1
    // and other note-s
// todo do we need to un-url encode?
// consider creating articles at the beginning with null links and then filling them in and not creating articles on the fly (except for eventstream ofc). could help catch bugs
    // would have to edit ArticleHolder.get to not create new articles dynamically (or do it differently?)

//todo write like a ton of tests
//todo retry once or twice
//todo switch to a callback style method where URLs (as strings) and callback methods are loaded into a que
    //that way all the network code can be grouped together
    //or something else that allows network code to be handled reasonably

//todo make pages/articles language consistent

//todo there's some problem with 'N sync that I don't understand. something with file encoding?
//todo I think crash bandicoot is broken
    //https://simple.wikipedia.org/wiki/Crash_Bandicoot

//todo visualizing all links could be interesting as a side project to this side project

//todo don't count File: links
//todo fix multiple encoding issue (somehow)- does the api have a way to support this?

//todo dashboard- prometheus?

//todo save often automatically and load from saved state